from telebot import types
from .interface import BotLogic
from .BaseBot import BotBase, BotCore
from .Utils import KeyBordUtils
from .States import MyStates


class BotLogicImpl(BotBase, BotLogic):
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ª–æ–≥–∏–∫—É"""

    def __init__(self, token: str, core: BotCore):
        super().__init__(token, core)
        self._back_markups = KeyBordUtils.markups_back()
        self._manager_markups = KeyBordUtils.markups_manage()

    async def add_doc(self, doc):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ –ë–î"""
        self.bot.send_message(
            self._core.user_id,
            "üê±–°–∫–∏–Ω—å –º–Ω–µ —Å–≤–æ–π —Ñ–∞–π–ª —Ñ–æ—Ä–º–∞—Ç–∞ PDF, DOCX, Markdown –∏–ª–∏ TXT",
        )

    def ask_request(self, message: types.Message):
        self._core.user_id = message.chat.id
        print(self._core.user_id)
        self.bot.set_state(self._core.user_id, MyStates.wait_search)
        self.bot.send_message(self._core.user_id, "–ß—Ç–æ –º–Ω–µ –∏—Å–∫–∞—Ç—å?")

    def _search(self, message: types.Message):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –±–∞–∑–µ"""
        print(message)
        if not message.text:
            self.bot.send_message(self._core.user_id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
            return

        markup = self._back_markups
        self.bot.send_message(
            self._core.user_id,
            f"üêæ–í—ã–ø–æ–ª–Ω—è—é –ø–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É  '{message.text}' –≤ –±–∞–∑–µ...",
        )
        self.bot.send_message(self._core.user_id, "üòΩ–ì–æ—Ç–æ–≤–æ!", reply_markup=markup)
        self.bot.delete_state(message.from_user.id)

    def manage(self):
        """–ú–µ—Ç–æ–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–º"""
        markup = self._manager_markups
        self.bot.send_message(
            self._core.user_id, "–ß—Ç–æ –º–Ω–µ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup
        )
